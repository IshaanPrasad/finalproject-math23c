rm(list=ls())
set.seed(123)
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/Users/abhishekmalani/Desktop/Math 23C/Data")
if (!require(foreign)) install.packages("foreign"); library(foreign)
if (!require(haven)) install.packages("haven"); library(haven)
census <- read.csv("finalproject.csv")
head(census)
index <- which(!is.na(census$Income) & !is.na(census$CensusTract) & !is.na(census$State)
& !is.na(census$County) & !is.na(census$TotalPop) & !is.na(census$Citizen)& !is.na(census$Men)
& !is.na(census$Women) & !is.na(census$Hispanic) & !is.na(census$White) & !is.na(census$Black)
& !is.na(census$Native) & !is.na(census$Asian) & !is.na(census$Pacific) & !is.na(census$IncomeErr)
& !is.na(census$IncomePerCap) & !is.na(census$IncomePerCapErr) & !is.na(census$Poverty)
& !is.na(census$ChildPoverty) & !is.na(census$Professional) & !is.na(census$Service)
& !is.na(census$Office) & !is.na(census$Construction) & !is.na(census$Production)
& !is.na(census$Drive) & !is.na(census$Carpool) & !is.na(census$Transit) & !is.na(census$Walk)
& !is.na(census$OtherTransp) & !is.na(census$WorkAtHome) & !is.na(census$MeanCommute)
& !is.na(census$Employed) & !is.na(census$PrivateWork) & !is.na(census$PublicWork)
& !is.na(census$SelfEmployed) & !is.na(census$FamilyWork) & !is.na(census$Unemployment)               )
clean <- census[index,]
head(clean)
write.csv(clean,"clean.csv")  #look at this in Excel or as a text file
median(clean$Income)
length(clean$Income)
head(clean)
median(clean$Income)
length(clean$Income)
hist(clean$Income)
h = hist(clean$Income, probability = TRUE) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE)
#To find the best fitting normal distribution, compute the mean and variance of the data
mu <- mean(clean$Income); mu
sigma <- sd(clean$Income)     #estimates square root of the population variance
curve(dnorm(x, mu, sigma), from = 0, to = 250000, add = TRUE, col = "red")
head(clean)
income = clean$Income
hispanic = clean$Hispanic
white = clean$White
black = clean$Black
native = clean$Native
asian = clean$Asian
pacific = clean$Pacific
mostlywhite = clean[which(white>80)]
mostlywhite = clean$Income[which(white>80)]
mostlywhite = clean$Income[which(white>80)]; mostlywhite
mostlyblack = clean$Income[which(black>80)]; mostlyblack
mostlyhispanic = clean$Income[which(hispanic>80)]
mostlyasian = clean$Income[which(asian>80)]
mostlywhite = clean$Income[which(white>80)]; mostlywhite; length(mostlywhite)
mostlyblack = clean$Income[which(black>80)];  length(mostlyblack)
mostlyhispanic = clean$Income[which(hispanic>80)];  length(mostlyhispanic)
mostlyasian = clean$Income[which(asian>80)]; length(mostlyasian)
mostlynative = clean$Income[which(native>80)]; length(mostlynative)
mostlypacific = clean$Income[which(pacific>80)]; length(mostlypacific)
mostlywhite = clean$Income[which(white>75)]; mostlywhite; length(mostlywhite)
mostlyblack = clean$Income[which(black>75)];  length(mostlyblack)
mostlyhispanic = clean$Income[which(hispanic>75)];  length(mostlyhispanic)
mostlyasian = clean$Income[which(asian>75)]; length(mostlyasian)
mostlynative = clean$Income[which(native>75)]; length(mostlynative)
mostlypacific = clean$Income[which(pacific>75)]; length(mostlypacific)
head(clean)
mean(clean$Asian)
mostlyasian = clean$Income[which(asian>50)]; length(mostlyasian)
whiteincome = mean(mostlywhite)
blackincome = mean(mostlyblack)
hispanicincome = mean(mostlyhispanic)
asianincome = mean(mostlyasian)
nativeincome = mean(mostlynative)
mostlypacific = clean$Income[which(pacific>50)]; length(mostlypacific)
mostlypacific = clean$Income[which(pacific>75)]; length(mostlypacific)
pacificincome = mean(mostlypacific)
whiteincome; blackincome;hispanicincome;asianincome;nativeincome;pacificincome
plot(whiteincome; blackincome;hispanicincome;asianincome;nativeincome;pacificincome)
plot(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome)
barplot(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome)
?barplot
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome))
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"))
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"), col =c("white", "black","brown", "yellow", "red", "blue"))
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"), col =c("white", "black","brown", "yellow", "red", "tan"))
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"), col =c("white", "black","brown", "yellow", "red", "tan"),main = "Income")
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"),main = "Income")
plot(c(0,0), (1,200000))
c
plot(c(0,0), c(1,200000))
scatter.smooth(c(0,0), c(1,200000))
scatter.smooth(c(0,0), c(1,200000))
scatter.smooth(c(0,1), c(0,200000))
plot(c(0,1), c(0,200000))
hispanic = which(clean$Hispanic>75)
white = which(clean$White>75)
black = which(clean$Black>75)
native = which(clean$Native>75)
asian = which(clean$Asian>75)
pacific = which(clean$Pacific>75)
mostlywhite = clean$Income[white]; mostlywhite; length(mostlywhite)
mostlyblack = clean$Income[black];  length(mostlyblack)
mostlyhispanic = clean$Income[hispanic];  length(mostlyhispanic)
mostlyasian = clean$Income[asian]; length(mostlyasian)
mostlynative = clean$Income[native]; length(mostlynative)
mostlypacific = clean$Income[pacific]; length(mostlypacific)
whiteincome = mean(mostlywhite)
blackincome = mean(mostlyblack)
hispanicincome = mean(mostlyhispanic)
asianincome = mean(mostlyasian)
nativeincome = mean(mostlynative)
pacificincome = mean(mostlypacific)
whiteincome; blackincome;hispanicincome;asianincome;nativeincome;pacificincome
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"),main = "Income")
hispanic = which(clean$Hispanic>75);  length(mostlyhispanic)
white = which(clean$White>75); length(mostlywhite)
black = which(clean$Black>75);  length(mostlyblack)
native = which(clean$Native>75); length(mostlynative)
asian = which(clean$Asian>75); length(mostlyasian)
pacific = which(clean$Pacific>75); length(mostlypacific)
whitepoverty = mean(mostlywhite)
blackpoverty = mean(mostlyblack)
hispanicpoverty = mean(mostlyhispanic)
asianpoverty = mean(mostlyasian)
nativepoverty = mean(mostlynative)
pacificpoverty = mean(mostlypacific)
whitepoverty; blackpoverty;hispanicpoverty;asianpoverty;nativepoverty;pacificpoverty
mostlywhite = clean$Poverty[white]
mostlyblack = clean$Poverty[black]
mostlyhispanic = clean$Poverty[hispanic]
mostlyasian = clean$Poverty[asian]
mostlynative = clean$Poverty[native]
mostlypacific = clean$Poverty[pacific]
whitepoverty = mean(mostlywhite)
blackpoverty = mean(mostlyblack)
hispanicpoverty = mean(mostlyhispanic)
asianpoverty = mean(mostlyasian)
nativepoverty = mean(mostlynative)
pacificpoverty = mean(mostlypacific)
whitepoverty; blackpoverty;hispanicpoverty;asianpoverty;nativepoverty;pacificpoverty
barplot(c(whitepoverty,blackpoverty,hispanicpoverty,asianpoverty,nativepoverty,pacificpoverty), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"),main = "Income")
barplot(c(whitepoverty,blackpoverty,hispanicpoverty,asianpoverty,nativepoverty,pacificpoverty), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"),main = "Poverty")
rm(list=ls())
set.seed(123)
#Change this to location of your data
setwd("/Users/abhishekmalani/Desktop/Math 23C/finalproject-math23c")
?setwd
getwd()
setwd("/Users/abhishekmalani/Desktop/Math 23C/Data")
setwd("Users/abhishekmalani/Desktop/Math 23C/Data")
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/Users/Abhishekmalani/Desktop/Math 23C/Data")
#Change this to location of your data
setwd(/Users/abhishekmalani/Desktop/Math 23C/finalproject-math23c)
getwd()
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/Users/Massimo/Documents/Math 23c/Data")
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/Users/abishekmalani/Documents/Math 23c")
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/abishekmalani/Documents/Math 23c")
#Topic 4: Logistic regression
SOX <- read.csv("RedSox2013.csv"); head(SOX)
#Convert the WonLost column to a Bernoulli random variable
wins <- (as.numeric(SOX$WonLost=="W")); head(wins)
#Extract the runs scored column
runs <- SOX$R
plot(runs,wins)  #not a great candidate for a straight-line approximation, but let's try
b <- cov(runs,wins)/var(runs)    #easy way to get the slope
#Here is the formula for the intercept
a <- mean(wins) - b*mean(runs);a
#We can add this regression line to the plot of the data
abline(a, b, col = "red")
#Instead, we assume that p = exp(alpha x+beta)/(1 + exp(alpha x+beta))
#This function can never be less than zero nor greater than 1
#Start with minus the log of the likelihood function
MLL<- function(alpha, beta) {
-sum( log( exp(alpha+beta*runs)/(1+exp(alpha+beta*runs)) )*wins
+ log(1/(1+exp(alpha+beta*runs)))*(1-wins) )
}
#R has a function that will maximize this function of alpha and beta
#install.packages("stats4")   #needs to be run at most once
library(stats4)
results<-mle(MLL, start = list(alpha = 0, beta = 0)) #an initial guess is required
results@coef
curve( exp(results@coef[1]+results@coef[2]*x)/ (1+exp(results@coef[1]+results@coef[2]*x)),col = "blue", add=TRUE)
#The curve shows a good model for the probability of winning as a function of runs
abline(h=0.5)
abline(v=c(3,4))
index <- which(runs == 3); head(index)   #games with 3 runs
mean(wins[index])   #won 34%
index <- which(runs == 4)    #games with 4 runs
mean(wins[index])   #won 63%
index <- which(runs == 7)    #games with 7 runs
mean(wins[index])   #won 88%
index <- which(runs == 9)    #games with 9 runs
mean(wins[index])   #won 100%
if (!require(stats4)) install.packages("stats4"); library(stats4)
barplot(c(whiteincome, blackincome, hispanicincome, asianincome, nativeincome, pacificincome), names.arg = c("white", "black", "hispanic", "asian", "native", "pacific"),main = "Income")
clean = read.csv("clean.csv")
rm(list=ls())
set.seed(123)
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/Users/abhishekmalani/Desktop/Math 23C/Data")
if (!require(foreign)) install.packages("foreign"); library(foreign)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(randomForest)) install.packages("randomForest"); library(randomForest)
if (!require(rpart)) install.packages("rpart"); library(rpart)
if (!require(stats4)) install.packages("stats4"); library(stats4)
census <- read.csv("finalproject.csv")
census <- read.csv("finalproject.csv")
census <- read.csv("finalproject.csv")
rm(list=ls())
set.seed(123)
#Change this to location of your data
#Can use drop down menu in R studio: file->import data set-> from stata and find stata data set
setwd("/Users/abhishekmalani/Desktop/Math 23C/Data")
if (!require(foreign)) install.packages("foreign"); library(foreign)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(randomForest)) install.packages("randomForest"); library(randomForest)
if (!require(rpart)) install.packages("rpart"); library(rpart)
if (!require(stats4)) install.packages("stats4"); library(stats4)
census <- read.csv("finalproject.csv")
clean = read.csv("clean.csv")
N = length(commute); N
N
rm(list=ls())
set.seed(123)
census <- read.csv("finalproject.csv")
setwd("/Users/Massimo/Documents/Math 23C/finalproject-math23c")
census <- read.csv("finalproject.csv")
if (!require(foreign)) install.packages("foreign"); library(foreign)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(randomForest)) install.packages("randomForest"); library(randomForest)
if (!require(rpart)) install.packages("rpart"); library(rpart)
if (!require(stats4)) install.packages("stats4"); library(stats4)
census <- read.csv("finalproject.csv")
head(census)
index <- which(!is.na(census$Income) & !is.na(census$CensusTract) & !is.na(census$State)
& !is.na(census$County) & !is.na(census$TotalPop) & !is.na(census$Citizen)& !is.na(census$Men)
& !is.na(census$Women) & !is.na(census$Hispanic) & !is.na(census$White) & !is.na(census$Black)
& !is.na(census$Native) & !is.na(census$Asian) & !is.na(census$Pacific) & !is.na(census$IncomeErr)
& !is.na(census$IncomePerCap) & !is.na(census$IncomePerCapErr) & !is.na(census$Poverty)
& !is.na(census$ChildPoverty) & !is.na(census$Professional) & !is.na(census$Service)
& !is.na(census$Office) & !is.na(census$Construction) & !is.na(census$Production)
& !is.na(census$Drive) & !is.na(census$Carpool) & !is.na(census$Transit) & !is.na(census$Walk)
& !is.na(census$OtherTransp) & !is.na(census$WorkAtHome) & !is.na(census$MeanCommute)
& !is.na(census$Employed) & !is.na(census$PrivateWork) & !is.na(census$PublicWork)
& !is.na(census$SelfEmployed) & !is.na(census$FamilyWork) & !is.na(census$Unemployment)               )
clean <- census[index,]
N = length(commute); N
### 95% Confidence Interval ###
#Point 20
commute = clean$MeanCommute
N = length(commute); N
